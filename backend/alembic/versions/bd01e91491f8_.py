"""empty message

Revision ID: bd01e91491f8
Revises: 
Create Date: 2025-08-03 19:30:32.854845

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bd01e91491f8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pact_conversation_id', sa.Integer(), nullable=False),
    sa.Column('pact_contact_id', sa.Integer(), nullable=False),
    sa.Column('pact_company_id', sa.Integer(), nullable=False),
    sa.Column('sender_external_id', sa.String(), nullable=False),
    sa.Column('sender_external_public_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('avatar_url', sa.String(), nullable=True),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('operational_state', sa.String(), nullable=True),
    sa.Column('replied_state', sa.String(), nullable=True),
    sa.Column('name_approved', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_message_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_pact_message_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_clients_id'), 'clients', ['id'], unique=False)
    op.create_index(op.f('ix_clients_pact_conversation_id'), 'clients', ['pact_conversation_id'], unique=True)
    op.create_index(op.f('ix_clients_sender_external_id'), 'clients', ['sender_external_id'], unique=False)
    op.create_table('settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('value', sa.Text(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_settings_id'), 'settings', ['id'], unique=False)
    op.create_index(op.f('ix_settings_key'), 'settings', ['key'], unique=True)
    op.create_table('triggers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'PAUSED', name='triggerstatus'), nullable=False),
    sa.Column('conditions', sa.JSON(), nullable=False),
    sa.Column('action_type', sa.Enum('NOTIFY', 'CREATE_TASK', 'SEND_MESSAGE', 'WEBHOOK', name='triggeraction'), nullable=False),
    sa.Column('action_config', sa.JSON(), nullable=True),
    sa.Column('check_interval_minutes', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_checked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_triggered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('trigger_count', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_triggers_id'), 'triggers', ['id'], unique=False)
    op.create_index(op.f('ix_triggers_name'), 'triggers', ['name'], unique=False)
    op.create_table('car_interest',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('structured_data', sa.JSON(), nullable=True),
    sa.Column('last_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('client_id')
    )
    op.create_index(op.f('ix_car_interest_id'), 'car_interest', ['id'], unique=False)
    op.create_table('dossier',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('structured_data', sa.JSON(), nullable=True),
    sa.Column('last_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('client_id')
    )
    op.create_index(op.f('ix_dossier_id'), 'dossier', ['id'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('pact_message_id', sa.Integer(), nullable=True),
    sa.Column('external_id', sa.String(), nullable=True),
    sa.Column('external_created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sender', sa.Enum('client', 'farmer', name='sendertype'), nullable=False),
    sa.Column('content_type', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('income', sa.Boolean(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('replied_to_id', sa.String(), nullable=True),
    sa.Column('reactions', sa.JSON(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('pact_message_id')
    )
    op.create_index(op.f('ix_messages_id'), 'messages', ['id'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('priority', sa.String(length=20), nullable=False),
    sa.Column('source', sa.String(length=50), nullable=False),
    sa.Column('trigger_id', sa.Integer(), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('telegram_notification_sent', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['trigger_id'], ['triggers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    op.create_table('trigger_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trigger_id', sa.Integer(), nullable=False),
    sa.Column('triggered_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('trigger_data', sa.JSON(), nullable=True),
    sa.Column('action_result', sa.JSON(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['trigger_id'], ['triggers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trigger_logs_id'), 'trigger_logs', ['id'], unique=False)
    op.create_index(op.f('ix_trigger_logs_trigger_id'), 'trigger_logs', ['trigger_id'], unique=False)
    op.create_table('message_attachments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('pact_attachment_id', sa.Integer(), nullable=True),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('mime_type', sa.String(), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('attachment_url', sa.String(), nullable=False),
    sa.Column('preview_url', sa.String(), nullable=True),
    sa.Column('aspect_ratio', sa.Float(), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('push_to_talk', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_message_attachments_id'), 'message_attachments', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_message_attachments_id'), table_name='message_attachments')
    op.drop_table('message_attachments')
    op.drop_index(op.f('ix_trigger_logs_trigger_id'), table_name='trigger_logs')
    op.drop_index(op.f('ix_trigger_logs_id'), table_name='trigger_logs')
    op.drop_table('trigger_logs')
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_messages_id'), table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_dossier_id'), table_name='dossier')
    op.drop_table('dossier')
    op.drop_index(op.f('ix_car_interest_id'), table_name='car_interest')
    op.drop_table('car_interest')
    op.drop_index(op.f('ix_triggers_name'), table_name='triggers')
    op.drop_index(op.f('ix_triggers_id'), table_name='triggers')
    op.drop_table('triggers')
    op.drop_index(op.f('ix_settings_key'), table_name='settings')
    op.drop_index(op.f('ix_settings_id'), table_name='settings')
    op.drop_table('settings')
    op.drop_index(op.f('ix_clients_sender_external_id'), table_name='clients')
    op.drop_index(op.f('ix_clients_pact_conversation_id'), table_name='clients')
    op.drop_index(op.f('ix_clients_id'), table_name='clients')
    op.drop_table('clients')
    # ### end Alembic commands ###