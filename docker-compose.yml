services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: farmer_crm
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: farmer_postgres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - farmer_network
    restart: unless-stopped
    # Порт убран - доступ только внутри сети

  backend:
    build: ./backend
    environment:
      - DATABASE_URL=postgresql://postgres:farmer_postgres_password@postgres:5432/farmer_crm
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - farmer_network
    restart: unless-stopped
    # Используем CMD из Dockerfile (без --reload)
    # Порт убран - доступ только через nginx
    # Volumes с кодом убраны

  bot:
    build: ./bot
    environment:
      - BACKEND_URL=http://backend:8000
    env_file:
      - .env
    depends_on:
      - backend
    networks:
      - farmer_network
    restart: unless-stopped
    # Используем CMD из Dockerfile
    # Volumes с кодом убраны

  frontend:
    build: 
      context: ./frontend
      args:
        VITE_API_BASE_URL: /api/v1
    volumes:
      - frontend_dist:/app/dist
    depends_on:
      - backend
    networks:
      - farmer_network
    restart: unless-stopped
    # Порт убран - доступ только через nginx

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d:ro
      - ./nginx/certbot/conf:/etc/letsencrypt:ro
      - ./nginx/certbot/www:/var/www/certbot:ro
      - frontend_dist:/usr/share/nginx/html:ro
    depends_on:
      - backend
      - frontend
    networks:
      - farmer_network
    restart: unless-stopped

volumes:
  postgres_data:
  frontend_dist:

networks:
  farmer_network:
    driver: bridge