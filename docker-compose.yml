version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: farmer_crm
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: farmer_postgres_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - farmer_network
    restart: unless-stopped

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:farmer_postgres_password@postgres:5432/farmer_crm
    env_file:
      - .env
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
    networks:
      - farmer_network
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  bot:
    build: ./bot
    environment:
      - DATABASE_URL=postgresql://postgres:farmer_postgres_password@postgres:5432/farmer_crm
      - BACKEND_URL=http://backend:8000
    env_file:
      - .env
    depends_on:
      - backend
    volumes:
      - ./bot:/app
    networks:
      - farmer_network
    restart: unless-stopped
    command: python main.py

  frontend:
    build: 
      context: ./frontend
      args:
        VITE_API_BASE_URL: /api/v1
    ports:
      - "3000:3000"
    volumes:
      - frontend_dist:/app/dist
    depends_on:
      - backend
    networks:
      - farmer_network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
      - frontend_dist:/usr/share/nginx/html:ro
    depends_on:
      - backend
      - frontend
    networks:
      - farmer_network
    restart: unless-stopped

volumes:
  postgres_data:
  frontend_dist:

networks:
  farmer_network:
    driver: bridge