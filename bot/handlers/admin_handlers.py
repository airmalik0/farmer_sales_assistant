from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
import httpx
import os

admin_router = Router()
BACKEND_URL = os.getenv("BACKEND_URL", "http://localhost:8000")
FARMER_ID = int(os.getenv("FARMER_TELEGRAM_ID"))

def setup_admin_handlers(dp):
    dp.include_router(admin_router)

@admin_router.message(Command("start"))
async def cmd_start(message: Message):
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞"""
    if message.from_user.id != FARMER_ID:
        await message.answer("‚ùå –≠—Ç–æ –∞–¥–º–∏–Ω-–±–æ—Ç. –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ Pact API.")
        return
    
    await message.answer("""
üéõ <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å Farmer Sales Assistant</b>
<i>–í—Å–µ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ Pact API</i>

üìä /stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞–Ω–∞–ª–∞–º
üë• /clients - –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤  
üì¢ /broadcast - –ó–∞–ø—É—Å–∫ —Ä–∞—Å—Å—ã–ª–∫–∏
üîß /settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Pact
üîÑ /sync - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å Pact
""")

@admin_router.message(Command("stats"))
async def cmd_stats(message: Message):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞–Ω–∞–ª–∞–º Pact"""
    if message.from_user.id != FARMER_ID:
        return
    
    async with httpx.AsyncClient() as client:
        try:
            response = await client.get(f"{BACKEND_URL}/api/v1/admin/stats")
            data = response.json()
            
            stats_text = f"""
üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Pact –∫–∞–Ω–∞–ª–æ–≤</b>

üë• <b>–ö–ª–∏–µ–Ω—Ç—ã:</b>
‚Ä¢ WhatsApp: {data['clients']['whatsapp']}
‚Ä¢ Telegram Personal: {data['clients']['telegram_personal']}
‚Ä¢ –í—Å–µ–≥–æ: {data['clients']['total']}

üí¨ <b>–°–æ–æ–±—â–µ–Ω–∏—è (—Å–µ–≥–æ–¥–Ω—è):</b>
‚Ä¢ –í—Ö–æ–¥—è—â–∏–µ: {data['messages']['incoming']}
‚Ä¢ –ò—Å—Ö–æ–¥—è—â–∏–µ: {data['messages']['outgoing']}

‚úÖ <b>–î–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:</b> {data['clients']['approved']}

üîó <b>Pact —Å—Ç–∞—Ç—É—Å:</b>
‚Ä¢ API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: {data['pact']['status']}
‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–∏–π webhook: {data['pact']['last_webhook']}
"""
            await message.answer(stats_text)
            
        except Exception as e:
            await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")

@admin_router.message(Command("sync"))
async def cmd_sync(message: Message):
    """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å Pact API"""
    if message.from_user.id != FARMER_ID:
        return
    
    await message.answer("üîÑ –ó–∞–ø—É—Å–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å Pact...")
    
    async with httpx.AsyncClient() as client:
        try:
            response = await client.post(f"{BACKEND_URL}/api/v1/admin/sync-conversations")
            data = response.json()
            
            await message.answer(f"""
‚úÖ <b>–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞</b>

üì• –ù–∞–π–¥–µ–Ω–æ –±–µ—Å–µ–¥: {data['total_conversations']}
üë§ –°–æ–∑–¥–∞–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: {data['created_clients']}
""")
            
        except Exception as e:
            await message.answer(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")

@admin_router.message(Command("clients"))
async def cmd_clients(message: Message):
    """–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤"""
    if message.from_user.id != FARMER_ID:
        return
    
    async with httpx.AsyncClient() as client:
        try:
            response = await client.get(f"{BACKEND_URL}/api/v1/clients")
            clients = response.json()
            
            if not clients:
                await message.answer("üë• –ö–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç")
                return
            
            clients_text = "üë• <b>–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤:</b>\n\n"
            for client in clients[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã—Ö 10
                channel = "üì± WhatsApp" if client['provider'] == 'whatsapp' else "üí¨ Telegram"
                clients_text += f"{channel} <b>{client['name'] or '–ë–µ–∑ –∏–º–µ–Ω–∏'}</b>\n"
                clients_text += f"ID: {client['id']} | –°–æ–∑–¥–∞–Ω: {client['created_at'][:10]}\n\n"
            
            if len(clients) > 10:
                clients_text += f"... –∏ –µ—â–µ {len(clients) - 10} –∫–ª–∏–µ–Ω—Ç–æ–≤"
            
            await message.answer(clients_text)
            
        except Exception as e:
            await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤: {e}")

@admin_router.message(Command("settings"))
async def cmd_settings(message: Message):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Pact"""
    if message.from_user.id != FARMER_ID:
        return
    
    await message.answer("""
üîß <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Pact API</b>

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
‚Ä¢ /webhook_status - –°—Ç–∞—Ç—É—Å webhook
‚Ä¢ /channels - –°—Ç–∞—Ç—É—Å –∫–∞–Ω–∞–ª–æ–≤
‚Ä¢ /test_api - –¢–µ—Å—Ç API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è

‚ÑπÔ∏è –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
""")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–æ—Ç–∫–ª–æ–Ω—è–µ–º –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–µ)
@admin_router.message()
async def handle_other_messages(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    if message.from_user.id != FARMER_ID:
        await message.answer("‚ùå –≠—Ç–æ –∞–¥–º–∏–Ω-–±–æ—Ç. –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ Pact API.")
        return
    
    await message.answer("ü§ñ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥") 